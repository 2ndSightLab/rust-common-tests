////////////////////////////////////////////////////////////////
//
//  Name: Non-snake case override validation test
//  GitHub repository: https://github.com/2ndSightLab/rust-common-tests.git
//  File: tests/unit_test_rust_common_tests/common/test_non_snake_case_override_present.rs
//  Copyright: Â© 2025 2nd Sight Lab, LLC
//
//  Validates that Cargo.toml has proper lint overrides
//
//  This software, which includes components generated with the assistance of artificial
//  intelligence, is free for personal, educational, and non-profit use, provided that
//  the included copyright notice is retained in all copies or substantial portions of
//  the software. This license, however, does not grant permission for any commercial
//  use, which requires obtaining a separate commercial license from the author. The
//  software is provided "as is," without any warranty, and the author cannot be held
//  liable for any damages or claims arising from its use. By using this software,
//  all users acknowledge that any potentially uncopyrightable portions generated by
//  AI are governed by the terms of this license as part of the overall work.
//
////////////////////////////////////////////////////////////////

#[cfg(test)]
mod tests {
    use std::fs;

    #[test]
    fn test_non_snake_case_override_present() {
        let CARGO_CONTENT = fs::read_to_string("Cargo.toml").expect("Cargo.toml not found");

        // Check that non_snake_case is explicitly allowed
        assert!(
            CARGO_CONTENT.contains("non_snake_case = \"allow\""),
            "Cargo.toml must contain 'non_snake_case = \"allow\"' to override Rust naming conventions"
        );

        // Verify it's in the lints section
        assert!(
            CARGO_CONTENT.contains("[lints.rust]"),
            "Cargo.toml must have [lints.rust] section"
        );
    }
}
