////////////////////////////////////////////////////////////////
//
//  Name: Dependency audit security test
//  GitHub repository: https://github.com/2ndSightLab/rust-common-tests.git
//  File: tests/security_checks_rust_common_tests/common/test_dependency_audit.rs
//  Copyright: Â© 2025 2nd Sight Lab, LLC
//
//  Runs cargo audit to scan for security vulnerabilities in dependencies
//
//  This software, which includes components generated with the assistance of artificial
//  intelligence, is free for personal, educational, and non-profit use, provided that
//  the included copyright notice is retained in all copies or substantial portions of
//  the software. This license, however, does not grant permission for any commercial
//  use, which requires obtaining a separate commercial license from the author. The
//  software is provided "as is," without any warranty, and the author cannot be held
//  liable for any damages or claims arising from its use. By using this software,
//  all users acknowledge that any potentially uncopyrightable portions generated by
//  AI are governed by the terms of this license as part of the overall work.
//
////////////////////////////////////////////////////////////////

#[cfg(test)]
mod test_dependency_audit_tests {
    use std::process::Command;

    #[test]
    fn test_comprehensive_security_audit() {
        let OUTPUT = Command::new("./scripts/security-checks.sh")
            .output()
            .expect("Failed to execute security-checks.sh");

        let STDERR = String::from_utf8_lossy(&OUTPUT.stderr);

        assert!(
            OUTPUT.status.success(),
            "security-checks.sh failed with exit code: {}. Output: {}",
            OUTPUT.status.code().unwrap_or(-1),
            STDERR
        );
    }
}
